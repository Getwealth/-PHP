<?php

namespace app\admin\controller;

use think\Controller;
use think\Db;
use think\Exception;
use think\Request;

class Infos extends Controller
{
    protected $model,$code;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model=model('informations');
        $this->code=config('code');
    }
    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        //
        checkToken();
        $getData=$this->request->get();
        if(isset($getData['limit'])&&!empty($getData['limit'])){
            $limit = $getData['limit'];
        }else{
            $limit=1;
        }
        if(isset($getData['page'])&&!empty($getData['page'])){
            $page=$getData['page'];
        }else{
            $page=1;
        }
        if(isset($getData['where'])&&!empty($getData['where'])){
            $where=$getData['where'];
        }else{
            $where='';
        }
        try{
            $result = Db::table('informations')->where('idesc','like','%'.$where.'%')->alias('i')->join('category c','i.cid=c.cid','left')->field('id,istate,idesc,ithumbs,name,userid,isfinished,tell,create_time,update_time')->order('id')->paginate($limit,false,['page'=>$page]);
            $total=$result->total();
            $data=$result->items();
            foreach ($data as $key=> $value){
                $userinfo= model('User')->find_user(['openid'=>$value['userid']],"avatarurl,nickname,id");
                if($userinfo){
                    $data[$key]['userinfo']=$userinfo;
                }
            }
            if($data){
                return json([
                    'code'=>$this->code['success'],
                    'msg'=>"信息查询成功",
                    'data'=>$data,
                    'count'=>$total
                ]);
            }else{
                return json([
                    'code'=>$this->code['fail'],
                    'msg'=>"暂无数据",
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code'=>500,
                'msg'=>"服务器错误"
            ]);
        }
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request  $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        //
    }

    /**
     * 显示指定的资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request  $request
     * @param  int  $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * 删除指定资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function delete($id)
    {
        //
        try{
            $result = $this->model->delinfos($id);
            if($result){
                return json([
                    'code'=>200,
                    'msg'=>'删除成功'
                ]);
            }else{
                return json([
                    'code'=>404,
                    'msg'=>'删除失败'
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code'=>500,
                'msg'=>'服务器错误'
            ]);
        }
    }

}
